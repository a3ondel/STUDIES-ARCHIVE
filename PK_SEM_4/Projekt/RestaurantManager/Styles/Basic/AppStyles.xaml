<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--xmlns:local="clr-namespace:RestaurantManager.Styles">-->


    <!--Startup Buttons-->
    <Style x:Key="StartupButtonStyle" TargetType= "Button">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF0978E6" Offset="0.013"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}" Offset="0.992"/>
                    <GradientStop Color="#FF64A2E0" Offset="0.5"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#19ffb6"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Startup Buttons-->
    <Style x:Key="AppBackgroundStyle" TargetType= "Grid">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="#FF13FBE6" Offset="1"/>
                    <GradientStop Color="#FF0CA294" Offset="0.646"/>
                    <GradientStop Color="#FF07043E" Offset="0.248"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Header Text Style-->
    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="AliceBlue"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="FontFamily" Value="MV Boli"/>
    </Style>


    <Style x:Key="LoginBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="White"/>
        <Setter Property="CornerRadius" Value="20"/>
    </Style>

    <Style x:Key="LoginLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="0,10,0,0"/>

    </Style>

    <Style x:Key="LoginTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="40"/>
        <!--<Setter Property="HorizontalAlignment" Value="Center"/>-->
        <Setter Property="Margin" Value="0,20,0,0"/>
    </Style>

    <Style x:Key="BaseButtonStyle" TargetType="Button" x:Shared="True">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="#80ffd7"/>
        <Setter Property="Template">
            <Setter.Value>
                <!--Tamplate for buttons -->
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="MyBackground" Padding="5" CornerRadius="2" BorderBrush="Black" BorderThickness="1" 
                            Background="{TemplateBinding Property=Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>

                    <!--triggers-->

                    <!--MouseOver-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MyBackground" Property="Background" >
                                <Setter.Value>
                                    <SolidColorBrush Color="#19ffb6"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>

                        <!--Changing Background when it is disabled-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MyBackground" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#e6fff7"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="SubmitButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}" >
        <!--<Setter Property="Background" Value="Yellow"/>-->
    </Style>

    <Style x:Key="GoBackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <!--<Setter Property="Background" Value="Red"/>-->
    </Style>

    <Style x:Key="ManagerButtonsStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="CadetBlue"/>
        <Setter Property="MinHeight">
            <Setter.Value>40</Setter.Value>
        </Setter>
        <Setter Property="MinWidth">
            <Setter.Value>100</Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LogoutButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="DeepSkyBlue"/>
        <Setter Property="MinHeight">
            <Setter.Value>30</Setter.Value>
        </Setter>
        <Setter Property="MinWidth">
            <Setter.Value>50</Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <!--Tamplate for buttons -->
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="MyBackground" Padding="5" CornerRadius="2" BorderBrush="Black" BorderThickness="1" 
                            Background="{TemplateBinding Property=Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>

                    <!--triggers-->

                    <!--MouseOver-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MyBackground" Property="Background" >
                                <Setter.Value>
                                    <SolidColorBrush Color="Red" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
    </Style>

    <Style x:Key="BContentControlStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">

                    <Border Padding="5" CornerRadius="2" BorderBrush="Black" BorderThickness="1" 
                    Background="{TemplateBinding Property=Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ContentControlStyle1" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource BContentControlStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Aqua" Opacity=".2"/>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="BBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="CornerRadius" Value="2"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Aqua" Opacity=".2"/>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="BorderStyleXL" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="Margin" Value="10,0"></Setter>
        <Setter Property="CornerRadius" Value="2"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Aqua" Opacity=".2"/>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BorderStyle1" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="2"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Aqua" Opacity=".2"/>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="BorderlessBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="1"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Aqua" Opacity=".2"/>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BLabelStyle" TargetType="{x:Type Label}" >
        <Setter Property="Background" Value="GreenYellow"/>
        <Setter Property="FontSize" Value="40" />
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <!--Tamplate for buttons -->
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border x:Name="MyBackground" Padding="5" CornerRadius="2" BorderBrush="Black" BorderThickness="1" 
                            Background="{TemplateBinding Property=Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key ="NobackgroundBorderStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource BorderStyle1}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <!--Cp from https://stackoverflow.com/questions/1545845/is-it-possible-to-extend-a-controltemplate-the-same-way-you-extend-a-style-in-wp?rq=1-->
    <!--<ControlTemplate x:Key="BaseMainButtonTemplate" TargetType="{x:Type Button}">
        <Grid TextBlock.Foreground="White" TextBlock.FontFamily="Calibri">
            <Rectangle Stroke="#FFE8E6E6" x:Name="rectangle" RadiusX="14.5" RadiusY="14.5" Fill="{TemplateBinding Property=Background}">
                -->
    <!-- This TemplateBinding takes the color set by the style and applies it to the rectangle. Doing it this way, allows the style to modify the background color -->
    <!--
                <Rectangle.OpacityMask>
                    <LinearGradientBrush EndPoint="0,1" SpreadMethod="Reflect">
                        <GradientStop Offset="0" Color="Transparent"></GradientStop>
                        <GradientStop Offset="1" Color="Gray"></GradientStop>
                    </LinearGradientBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
        </Grid>

        <ControlTemplate.Triggers>
            -->
    <!-- OpacityMask when it's Focused, Defaulted and Mouse is over -->
    <!--
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="OpacityMask" TargetName="rectangle">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" SpreadMethod="Repeat">
                            <GradientStop Offset="1" Color="Transparent"></GradientStop>
                            <GradientStop Offset="0" Color="Gray"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            -->
    <!-- OpacityMask when it's pressed -->
    <!--
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Stroke" TargetName="rectangle">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF223472" Offset="0"/>
                            <GradientStop Color="#FFF2F0F0" Offset="0.911"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="StrokeThickness" TargetName="rectangle" Value="3"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="BlueButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Blue" />
        <Setter Property="Template" Value="{StaticResource BaseMainButtonTemplate}">
        </Setter>
    </Style>-->

</ResourceDictionary>